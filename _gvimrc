"------------------------------------------------
set background=light
colorscheme solarized
"------------------------------------------------
set printoptions=number:y
"------------------------------------------------
hi Pmenu      guibg=grey40
hi PmenuSel   guibg=olivedrab
hi PmenuSbar  guibg=Grey

"------------------------------------------------
set listchars=tab:__,trail:@,eol:$
set list
highlight JpSpace cterm=underline ctermfg=Blue guibg=#774444

"------------------------------------------------
"IMEの状態でカーソルの色を変更する
hi CursorIM  guifg=black  guibg=red  gui=NONE  ctermfg=black  ctermbg=white  cterm=reverse

"------------------------------------------------
"挿入モード時、ステータスラインのカラー変更
let g:hi_insert = 'highlight StatusLine guifg=darkblue guibg=darkyellow gui=none ctermfg=blue ctermbg=yellow cterm=none'

if has('syntax')
  augroup InsertHook
    autocmd!
    autocmd InsertEnter * call s:StatusLine('Enter')
    autocmd InsertLeave * call s:StatusLine('Leave')
  augroup END
endif

let s:slhlcmd = ''
function! s:StatusLine(mode)
  if a:mode == 'Enter'
    silent! let s:slhlcmd = 'highlight ' . s:GetHighlight('StatusLine')
    silent exec g:hi_insert
  else
    highlight clear StatusLine
    silent exec s:slhlcmd
  endif
endfunction

function! s:GetHighlight(hi)
  redir => hl
  exec 'highlight '.a:hi
  redir END
  let hl = substitute(hl, '[\r\n]', '', 'g')
  let hl = substitute(hl, 'xxx', '', '')
  return hl
endfunction

"###########################################################
" ローカル環境依存
"###########################################################
if 1 && filereadable($VIM . '/gvimrc_local')
  source $VIM/gvimrc_local
endif
if 1 && filereadable($HOME. '/gvimrc_local')
  source $HOME/gvimrc_local
endif
